# Generated by Django 4.0.5 on 2022-07-03 04:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150, verbose_name='Client Name')),
                ('address', models.CharField(blank=True, max_length=150, null=True, verbose_name='Address')),
                ('city', models.CharField(choices=[('ARR', 'Arrecifes'), ('SAR', 'Capitan Sarmiento'), ('SAL', 'Salto')], max_length=50, verbose_name='City')),
                ('telephone', models.CharField(blank=True, max_length=150, null=True, verbose_name='Telephone')),
                ('collector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(db_index=True, max_length=150, verbose_name='Product')),
                ('price', models.FloatField(verbose_name='Price')),
                ('installment_amount', models.FloatField(verbose_name='Installment Amount')),
                ('installments', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Installments')),
                ('date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date')),
                ('modification', models.DateTimeField(auto_now=True, verbose_name='Modification Date')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.customer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SaleInstallment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installment', models.IntegerField(verbose_name='Installment')),
                ('installment_amount', models.FloatField(verbose_name='Installment Amount')),
                ('paid_amount', models.FloatField(default=0.0, verbose_name='Paid Amount')),
                ('payment_date', models.DateTimeField(blank=True, null=True, verbose_name='Payment Date')),
                ('status', models.CharField(choices=[('PAID', 'Paid'), ('PENDING', 'Pending'), ('PARTIAL', 'Partially Paid')], default='PENDING', max_length=50, verbose_name='Payment Status')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.sale')),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date')),
                ('modification', models.DateTimeField(auto_now=True, verbose_name='Modification Date')),
                ('collector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sale_installment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.saleinstallment')),
            ],
        ),
        migrations.AddConstraint(
            model_name='saleinstallment',
            constraint=models.UniqueConstraint(fields=('sale', 'installment'), name='unique_sale_installment'),
        ),
        migrations.AddConstraint(
            model_name='saleinstallment',
            constraint=models.CheckConstraint(check=models.Q(('paid_amount__lte', django.db.models.expressions.F('installment_amount'))), name='paid_amount_less_or_equal_than_installment_amount'),
        ),
        migrations.AddConstraint(
            model_name='collection',
            constraint=models.UniqueConstraint(fields=('sale_installment', 'date'), name='unique_collection'),
        ),
    ]
